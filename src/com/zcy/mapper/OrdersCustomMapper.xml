<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，
	可以理解为sql隔离 
	使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址。
-->
<mapper namespace="com.zcy.mapper.OrdersCustomMapper">

	<!-- 查询用户及购买的商品 -->
	<resultMap type="com.zcy.pojo.User" id="UserAndItemsResultMap">
		<!-- 用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
		<result column="address" property="address"/>
		
		<!-- 订单信息 -->
		<collection property="ordersList" ofType="com.zcy.pojo.Orders">
			<id column="id" property="id"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!-- 订单明细
			一个订单包括多个明细
			-->
			<collection property="orderDetails" ofType="com.zcy.pojo.OrderDetail">
				<!-- id:订单明细唯一标识
				property：将订单明细的唯一标识映射到OrderDetail的哪个属性当中
				 -->
				<id column="orderdetail_id" property="id"/>
				<result column="items_id" property="itemsId"/>
				<result column="items_num" property="itemsNum"/>
				<result column="orders_id" property="ordersId"/>
				<!-- 商品明细
				一个订单明细对应一个商品
				-->
				<association property="items" javaType="com.zcy.pojo.Items">
					<id column="items_id" property="id"/>
					<result column="items_name" property="name"/>
					<result column="items_detail" property="detail"/>
					<result column="items_price" property="price"/>
				</association> 
			</collection>			
		</collection>
	</resultMap>

	<!-- 订单查询关联用户的resultMap
	将整个查询的结果映射到com.zcy.pojo.Orders中
	 -->
	<resultMap type="com.zcy.pojo.Orders" id="OrdersUserResultMap">
		<!-- 配置映射的订单信息 -->
		<!-- id指定查询列中的唯一标识，订单信息中的唯一标识，
		如果有多个列组成唯一标识，要配置多个id
		column:订单信息的唯一标识列
		property：订单信息的唯一标识列所映射Orders到哪个属性中
		-->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 配置映射的关联的用户信息 -->
		<!-- association:用于映射关联查询单个对象的信息
		property:要将关联查询的用户信息映射到Orders中哪个属性。
		 -->
		<association property="user" javaType="com.zcy.pojo.User">
			<!-- id:关联查询用户的唯一标识
			column：指定唯一标识用户信息的列
			property:映射到user的哪个属性
			 -->
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
	
	<!-- 订单及订单明细的resultMap 
	使用extends继承，就不用在其中配置订单信息和用户信息的映射了。
	-->
	<resultMap type="com.zcy.pojo.Orders" id="OrdersAndOrderDetailResultMap"
			extends="OrdersUserResultMap">
		<!-- 订单信息 -->
		<!-- 用户信息 -->
		<!-- 使用extends继承，就不用在其中配置订单信息和用户信息的映射了 -->
		<!-- 订单明细信息 
		一个订单关联查询出了多条明细，要使用collection进行映射
		collection：对关联查询到多条记录映射到集合对象中。
		property:映射到user的哪个属性
		ofType:指定映射到集合属性中的pojo的类型
		-->
		<collection property="orderDetails" ofType="com.zcy.pojo.OrderDetail">
			<!-- id:订单明细唯一标识
			property：将订单明细的唯一标识映射到OrderDetail的哪个属性当中
			 -->
			<id column="orderdetail_id" property="id"/>
			<result column="items_id" property="itemsId"/>
			<result column="items_num" property="itemsNum"/>
			<result column="orders_id" property="ordersId"/>
		</collection>
	</resultMap>

	<!-- 查询订单关联查询用户信息 -->
	<select id="findOrdersUser" resultType="com.zcy.pojo.OrdersCustom">
		SELECT
			orders.*,
			user.username,
			user.sex,
			user.address
		FROM
			orders,
			user
		
		WHERE orders.user_id=user.id
	</select>
	<!-- 查询订单关联查询用户信息，使用resultMap -->
	<select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
		SELECT
			orders.*,
			user.username,
			user.sex,
			user.address
		FROM
			orders,
			user
		
		WHERE orders.user_id=user.id
	</select>
	<!-- 查询订单关联用户及订单明细,使用resultMap -->
	<select id="findOrdersAndOrderDetailResultMap" 
			resultMap="OrdersAndOrderDetailResultMap">
		SELECT
			orders.*,
			`user`.username,
			`user`.sex,
			`user`.address,
			orderdetail.id orderdetail_id,
			orderdetail.items_id,
			orderdetail.items_num,
			orderdetail.orders_id
		FROM
			orders,
			`user`,
			orderdetail
		
		WHERE orders.user_id=`user`.id AND orderdetail.orders_id=orders.id
	</select>
	<!-- 查询用户及购买的商品信息，使用resultMap -->
	<select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
		SELECT
			orders.*,
			`user`.username,
			`user`.sex,
			`user`.address,
			orderdetail.items_id,
			orderdetail.items_num,
			orderdetail.orders_id,
			items.`name` items_name,
			items.detail items_detail,
			items.price items_price
		FROM
			orders,
			`user`,
			orderdetail,
			items
		WHERE orders.user_id=`user`.id 
		AND orderdetail.orders_id=orders.id
		
		AND orderdetail.items_id=items.id
	</select>
	
	<!-- 延迟加载的resultMap -->
	<resultMap type="com.zcy.pojo.Orders" id="OrdersUserLazyLoadingResultMap">
		<!-- 对订单信息进行映射配置 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 对用户信息进行延迟加载 
		select:指定延迟加载需要执行的statement的id(是根据user_id查询用户信息的statement)
		要使用userMapper.xml中findUserById完成根据用户id(user_id)用户信息的查询，
		如果findUserById不在本mapper中，需要在前面加namespace。
		column:订单信息中关联用户信息查询的列，即user_id
		关联查询的sql理解为：
		SELECT orders.*,
		(SELECT username FROM `user` WHERE orders.user_id=`user`.id)username,
		(SELECT sex FROM `user` WHERE orders.user_id=`user`.id)sex,
		FROM orders
		-->
		<association property="user" javaType="com.zcy.pojo.User"
				select="com.zcy.mapper.UserMapper.findUserById"
				column="user_id">	
		</association>
	</resultMap>
	<!-- 查询订单关联查询用户，用户信息需要延迟加载 -->
	<select id="findOrdersUserLazyLoading" 
			resultMap="OrdersUserLazyLoadingResultMap">
		select * from orders
	</select>
</mapper>